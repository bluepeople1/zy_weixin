<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            ">
       <bean
               class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
              <property name="locations">
                     <list>
                            <value>classpath:jdbc.properties</value>
                     </list>
              </property>
       </bean>
       <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">

              <!-- 基本属性 url、user、password -->
              <property name="url" value="${jdbc.url}" />
              <property name="username" value="${jdbc.username}" />
              <property name="password" value="${jdbc.password}" />

              <!-- 配置初始化大小、最小、最大 -->
              <property name="initialSize" value="3" />
              <property name="minIdle" value="3" />
              <property name="maxActive" value="20" />

              <!-- 配置获取连接等待超时的时间 -->
              <property name="maxWait" value="60000" />

              <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
              <property name="timeBetweenEvictionRunsMillis" value="60000" />

              <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
              <property name="minEvictableIdleTimeMillis" value="300000" />

              <property name="validationQuery" value="SELECT 'x'" />
              <property name="testWhileIdle" value="true" />
              <property name="testOnBorrow" value="false" />
              <property name="testOnReturn" value="false" />

              <!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用）
              <property name="poolPreparedStatements" value="true" />
              <property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->

              <!-- 配置监控统计拦截的filters -->
              <property name="filters" value="stat" />
       </bean>
       <bean id="sessionFactory"
             class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
              <property name="dataSource">
                     <ref bean="dataSource" />
              </property>
              <property name="hibernateProperties">
                     <props>
                            <prop key="hibernate.dialect">
                                   org.hibernate.dialect.MySQLDialect
                            </prop>
                            <prop key="hibernate.connection.autocommit">true</prop>
                            <prop key="hibernate.connection.release_mode">after_transaction</prop>
                            <prop key="hibernate.autoReconnect">true</prop>
                            <prop key="hibernate.show_sql">false</prop>
                            <prop key="hibernate.format_sql">false</prop>
                            <!-- 自动创建|更新|验证数据库表结构 -->
                            <prop key="hibernate.hbm2ddl.auto">update</prop>

                     </props>
              </property>
       </bean>
       <bean id="baseDao" class="dao.BaseDAO">
              <property name="sessionFactory" ref="sessionFactory"></property>
       </bean>
</beans>